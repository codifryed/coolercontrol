image: registry.gitlab.com/codifryed/coolero/pipeline:v2

variables:
  POETRY_VIRTUALENVS_IN_PROJECT: "true"

cache:
  key: "${CI_JOB_NAME}"
  paths:
    - .cache/pip
    - .venv

before_script:
  - python --version
  - poetry --version
  - poetry install

stages:
  #  - quality
  - test
  - release

#lint:
#  stage: quality
#  allow_failure: false
#  script:
#    - make lint

test:
  stage: test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_PIPELINE_SOURCE == "push"'
  script:
    - xvfb-run make test

create_release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  before_script:
    - echo 'Starting release job'
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "running release job for v${CI_COMMIT_TAG:?}"
    - awk -v ver="${CI_COMMIT_TAG:?}" '/^#+ \[/ { if (p) { exit }; if ($2 == "["ver"]") { p=1; next} } p && NF' ./CHANGELOG.md > ./description.txt
  release:
    name: 'Coolero v$CI_COMMIT_TAG'
    description: './description.txt'
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_TAG'
    milestones:
      - '$CI_COMMIT_TAG'
    assets:
      links:
        - name: 'AppImage'
          url: 'https://gitlab.com/api/v4/projects/30707566/packages/generic/appimage/$CI_COMMIT_TAG/Coolero-x86_64.AppImage'
          link_type: package
        - name: 'Flatpak'
          url: 'https://flathub.org/apps/details/org.coolero.Coolero'
          link_type: package
