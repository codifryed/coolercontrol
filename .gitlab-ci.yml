image: registry.gitlab.com/coolero/coolero/pipeline:v14

variables:
  POETRY_CACHE_DIR: "$CI_PROJECT_DIR/.pypoetry"
  CARGO_HOME: "$CI_PROJECT_DIR/.cargo"

cache:
  key: "${CI_JOB_NAME}"
  paths:
    - .cache/pip
    - .pypoetry
    - .cargo
    - coolercontrold/target

before_script:
  - python3.10 --version
  - poetry --version
  - rustup --version
  - cargo --version
  - rustc --version

stages:
  - test
  - compile-release
  - build-packages
  - release


# normal pipeline quick tests
############################################################################################

test_fast_liqctld:
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
  needs: [ ]
  script:
    - make test-fast-liqctld

test_fast_daemon:
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
  needs: [ ]
  script:
    - make test-fast-daemon
  artifacts:
    when: always
    reports:
      junit: coolercontrold/results.xml

test_fast_gui:
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
  needs: [ ]
  script:
    - make test-fast-gui


# compile all release artifacts
############################################################################################

compile_release_artifacts:
  stage: compile-release
  when: manual
  needs: [ ]
  script:
    - echo "Starting compilation"

compile_liqctld:
  stage: compile-release
  needs:
    - compile_release_artifacts
  script:
    - make test-liqctld
  artifacts:
    name: "CoolerControl-Liqctld_x64_${CI_COMMIT_SHORT_SHA}"
    paths:
      - coolercontrol-liqctld/coolercontrol-liqctld.dist
    expire_in: 30 days

compile_daemon:
  stage: compile-release
  needs:
    - compile_release_artifacts
  script:
    - make test-daemon
  artifacts:
    name: "CoolerControlD_x64_${CI_COMMIT_SHORT_SHA}"
    paths:
      - coolercontrold/coolercontrold
    expire_in: 30 days


# collect and package
############################################################################################

build_appimage:
  stage: build-packages
  dependencies:
    - compile_liqctld
    - compile_daemon
  needs:
    - compile_liqctld
    - compile_daemon
  script:
    - make appimage-daemon
  artifacts:
    name: "CoolerControlD_x86_64_${CI_COMMIT_SHORT_SHA}.AppImage"
    paths:
      - CoolerControlD-x86_64.AppImage
    expire_in: 30 days

build_packages:
  stage: build-packages
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && ($CI_COMMIT_TAG == null || $CI_COMMIT_TAG == "")
  script:
    - make build # -j3


# todo: when: manual for test AppImage building

create_release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  before_script:
    - echo 'Starting release job'
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - echo "running release job for v${CI_COMMIT_TAG:?}"
    - awk -v ver="${CI_COMMIT_TAG:?}" '/^#+ \[/ { if (p) { exit }; if ($2 == "["ver"]") { p=1; next} } p && NF' ./CHANGELOG.md > ./description.txt
  release:
    name: 'CoolerControl v$CI_COMMIT_TAG'
    description: './description.txt'
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_TAG'
    milestones:
      - '$CI_COMMIT_TAG'
    assets:
      links:
        - name: 'AppImage GUI'
          url: 'https://gitlab.com/api/v4/projects/30707566/packages/generic/appimage/$CI_COMMIT_TAG/CoolerControl-x86_64.AppImage'
          link_type: package
        - name: 'AppImage Daemon'
          url: 'https://gitlab.com/api/v4/projects/30707566/packages/generic/appimage/$CI_COMMIT_TAG/CoolerControlD-x86_64.AppImage'
          link_type: package
