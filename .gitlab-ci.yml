image: registry.gitlab.com/coolero/coolero/pipeline:v14

variables:
  POETRY_CACHE_DIR: "$CI_PROJECT_DIR/.pypoetry"
  CARGO_HOME: "$CI_PROJECT_DIR/.cargo"

stages:
  - test
  - compile_release
  - build_packages
  - release

.cache_template: &cache_template
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .cache/pip
      - .pypoetry
      - .cargo
      - coolercontrold/target

.main_image_template: &main_image_template
  before_script:
    - python3.10 --version
    - poetry --version
    - rustup --version
    - cargo --version
    - rustc --version

# normal pipeline quick tests
############################################################################################

test_fast_metadata:
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
  needs: [ ]
  script:
    - make validate-metadata

test_fast_liqctld:
  <<: *cache_template
  <<: *main_image_template
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
  needs: [ ]
  script:
    - make test-fast-liqctld

test_fast_daemon:
  <<: *cache_template
  <<: *main_image_template
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
  needs: [ ]
  script:
    - make test-fast-daemon
  artifacts:
    when: always
    reports:
      junit: coolercontrold/results.xml

test_fast_gui:
  <<: *cache_template
  <<: *main_image_template
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
  needs: [ ]
  script:
    - make test-fast-gui


# compile all release artifacts
############################################################################################

compile_release_artifacts:
  # This is only a trigger to start the parallel jobs necessary
  stage: compile_release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  when: manual
  needs: [ ]
  script:
    - echo "All release compilation jobs triggered."

compile_liqctld:
  <<: *cache_template
  <<: *main_image_template
  stage: compile_release
  needs:
    - compile_release_artifacts
  script:
    - make test-liqctld
  artifacts:
    name: "CoolerControl-Liqctld_x64_${CI_COMMIT_SHORT_SHA}"
    paths:
      - coolercontrol-liqctld/coolercontrol-liqctld.dist
    expire_in: 15 days

compile_daemon:
  <<: *cache_template
  <<: *main_image_template
  stage: compile_release
  needs:
    - compile_release_artifacts
  script:
    - make test-daemon
  artifacts:
    name: "CoolerControlD_x64_${CI_COMMIT_SHORT_SHA}"
    paths:
      - coolercontrold/coolercontrold
    expire_in: 15 days

compile_gui:
  <<: *cache_template
  <<: *main_image_template
  stage: compile_release
  needs:
    - compile_release_artifacts
  script:
    - make test-gui
  artifacts:
    name: "CoolerControl_x64_${CI_COMMIT_SHORT_SHA}"
    paths:
      - coolercontrol-gui/coolercontrol.dist
    expire_in: 15 days


# collect and package
############################################################################################

build_appimages:
  stage: build_packages
  dependencies:
    - compile_liqctld
    - compile_daemon
    - compile_gui
  needs:
    - compile_liqctld
    - compile_daemon
    - compile_gui
  script:
    - make appimage-daemon
    # bash can't find the appimage for whatever reason
    #- $CI_PROJECT_DIR/CoolerControlD-x86_64.AppImage --version
    - make appimage-gui
    #- $CI_PROJECT_DIR/CoolerControl-x86_64.AppImage --version
  artifacts:
    name: "CoolerControl_x86_64_${CI_COMMIT_SHORT_SHA}_AppImages"
    paths:
      - CoolerControlD-x86_64.AppImage
      - CoolerControl-x86_64.AppImage
    expire_in: 30 days

build_deb_bullseye:
  image: registry.gitlab.com/coolero/coolero/deb-bullseye:v14
  stage: build_packages
  dependencies:
    - compile_liqctld
    - compile_daemon
    - compile_gui
  needs:
    - compile_liqctld
    - compile_daemon
    - compile_gui
  script:
    - cd packaging
    - dpkg-architecture -l
    - dpkg-buildpackage -us -B
    - rm ../coolercontrol-dbgsym*.*deb
  artifacts:
    name: "CoolerControl_x86_64_deb_${CI_COMMIT_SHORT_SHA}"
    paths:
      - coolercontrol*.deb
    exclude:
      - coolercontrol-dbgsym*.*deb
    expire_in: 30 days

build_deb_bookworm:
  image: registry.gitlab.com/coolero/coolero/deb-bookworm:v14
  stage: build_packages
  dependencies:
    - compile_liqctld
    - compile_daemon
    - compile_gui
  needs:
    - compile_liqctld
    - compile_daemon
    - compile_gui
  script:
    - cd packaging
    - dpkg-architecture -l
    - dpkg-buildpackage -us -B
    - rm ../coolercontrol-dbgsym*.*deb
  artifacts:
    name: "CoolerControl_x86_64_deb_${CI_COMMIT_SHORT_SHA}"
    paths:
      - coolercontrol*.deb
    exclude:
      - coolercontrol-dbgsym*.*deb
    expire_in: 30 days


# test installation of packages
############################################################################################

test_deb_bullseye:
  stage: build_packages
  image: amd64/debian:bullseye
  dependencies:
    - build_deb_bullseye
  needs:
    - build_deb_bullseye
  script:
    - apt update
    - DEBIAN_FRONTEND=noninteractive apt install -yq --no-install-recommends ./coolercontrol*amd64.deb
    - coolercontrold --version
    - coolercontrol-liqctld --version
    - coolercontrol --version
    - apt remove -y coolercontrol

test_deb_bookworm:
  stage: build_packages
  image: amd64/debian:bookworm
  dependencies:
    - build_deb_bookworm
  needs:
    - build_deb_bookworm
  script:
    - apt update
    - DEBIAN_FRONTEND=noninteractive apt install -yq --no-install-recommends ./coolercontrol*amd64.deb
    - coolercontrold --version
    - coolercontrol-liqctld --version
    - coolercontrol --version
    - apt remove -y coolercontrol

test_deb_ubuntu_20.04:
  stage: build_packages
  image: ubuntu:focal
  dependencies:
    - build_deb_bullseye
  needs:
    - build_deb_bullseye
  script:
    - apt update
    - DEBIAN_FRONTEND=noninteractive apt install -yq --no-install-recommends ./coolercontrol*amd64.deb
    - coolercontrold --version
    - coolercontrol-liqctld --version
    - coolercontrol --version
    - apt remove -y coolercontrol

test_deb_ubuntu_22.04:
  stage: build_packages
  image: ubuntu:jammy
  dependencies:
    - build_deb_bookworm
  needs:
    - build_deb_bookworm
  script:
    - apt update
    - DEBIAN_FRONTEND=noninteractive apt install -yq --no-install-recommends ./coolercontrol*amd64.deb
    - coolercontrold --version
    - coolercontrol-liqctld --version
    - coolercontrol --version
    - apt remove -y coolercontrol


# future CI features
############################################################################################

build_packages:
  stage: build_packages
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && ($CI_COMMIT_TAG == null || $CI_COMMIT_TAG == "")
  script:
    - make build # -j3

create_release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  before_script:
    - echo 'Starting release job'
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - echo "running release job for v${CI_COMMIT_TAG:?}"
    - awk -v ver="${CI_COMMIT_TAG:?}" '/^#+ \[/ { if (p) { exit }; if ($2 == "["ver"]") { p=1; next} } p && NF' ./CHANGELOG.md > ./description.txt
  release:
    name: 'CoolerControl v$CI_COMMIT_TAG'
    description: './description.txt'
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_TAG'
    milestones:
      - '$CI_COMMIT_TAG'
    assets:
      links:
        - name: 'AppImage GUI'
          url: 'https://gitlab.com/api/v4/projects/30707566/packages/generic/appimage/$CI_COMMIT_TAG/CoolerControl-x86_64.AppImage'
          link_type: package
        - name: 'AppImage Daemon'
          url: 'https://gitlab.com/api/v4/projects/30707566/packages/generic/appimage/$CI_COMMIT_TAG/CoolerControlD-x86_64.AppImage'
          link_type: package
