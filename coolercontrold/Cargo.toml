[package]
name = "coolercontrold"
version = "2.2.0"
authors = ["Guy Boldon <gb@guyboldon.com>"]
edition = "2021"
# MSRV for all included libraries
rust-version = "1.81"
description = "Monitor and control your cooling and other devices"
documentation = "https://gitlab.com/coolercontrol/coolercontrol/-/wikis/home"
readme = "README.md"
categories = ["hardware-support"]
keywords = ["temperature", "hardware", "cooling", "fan", "monitor"]
homepage = "https://gitlab.com/coolercontrol/coolercontrol"
repository = "https://gitlab.com/coolercontrol/coolercontrol"
license = "GPL-3.0-or-later"

[features]
default = []
io_uring = ["dep:tokio-uring"]

[dependencies]
log = "0.4.27"
env_logger = "0.11.8"
systemd-journal-logger = "2.2.2"
clap = { version = "4.5.40", features = [
  "derive",
] } # Command line argument parser
anyhow = "1.0.98"
derive_more = { version = "2.0.1", features = ["display", "error"] }
tokio = { version = "1.45.1", default-features = false, features = [
  "rt",
  "fs",
  "macros",
  "parking_lot",
  "time",
  "sync",
  "signal",
  "net",
  "io-std",
  "io-util",
] }
tokio-uring = { version = "0.5.0", optional = true }
tokio-util = "0.7.15"
moro-local = "0.4.0"
async-trait = "0.1.88"
# Axum is held back. We need to adjust all paths for 0.8+ and test aide support:
axum = { version = "=0.7.9", features = ["multipart", "macros"] }
# Axum-Extra held back as 0.10.0 has some breaking changes as well as Axum update above:
axum-extra = { version = "=0.9.6", features = ["typed-header"] }
tower-http = { version = "0.6.6", features = [
  "timeout",
  "trace",
  "limit",
  "cors",
  "normalize-path",
  "compression-full",
] }
# Held back due to Axum update above:
tower-sessions = { version = "=0.13.0", features = ["private"] }
# Our own fork which handles our specific use case:
tower_governor = { git = "https://github.com/codifryed/tower-governor", features = [
  "axum",
  "tracing",
] }
tower-serve-static = "0.1.1"
include_dir = "0.7.4"
# 0.14.0 update for axum 0.8
aide = { version = "=0.13.5", features = [
  "axum",
  "axum-extra",
  "axum-multipart",
] }
headers = "0.4.1"
# >=0.9.0 w/ chrono04 doesn't look to be compatible with old aide/axum
schemars = { version = "0.8.22", features = ["chrono"] }
mime = "0.3.17"
# Held back due to Axum update above:
axum_typed_multipart = "=0.14.0"
tempfile = "3.20.0"
tokio-stream = { version = "0.1.17", default-features = false, features = [
  "sync",
] }
hyper = { version = "1.6.0", default-features = false, features = [
  "http1",
  "client",
] }
hyper-util = { version = "0.1.14", default-features = false, features = [
  "client",
  "http1",
  "tokio",
] }
http-body-util = "0.1.3"
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.140"
zbus = { version = "5.7.1", default-features = false, features = [
  "tokio",
] } # our preferred DBus lib
futures-util = { version = "0.3.31", default-features = false, features = [
  "std",
] } # future utilities we use like join3
sysinfo = { version = "0.35.2", default-features = false, features = [
  "system",
] } # gets detailed system info
chrono = { version = "0.4.41", features = [
  "serde",
] } # We use timestamps in our status history
strum = { version = "0.27.1", features = ["derive"] } # Enum -> String
regex = "1.11.1"
cached = { version = "0.55.1", default-features = false, features = [
  "proc_macro",
  "ahash",
  "async",
] }
heck = "0.5.0" # hanldes case conversion like CamelCase and Title Case.
const_format = "0.2.34" # allows combining string constants
psutil = { version = "5.2.0", default-features = false, features = [
  "cpu",
  "sensors",
] } # for cpu stats
nu-glob = "0.105.1"
# our own fork: (additional Nix support, etc.)
nvml-wrapper = { git = "https://github.com/codifryed/nvml-wrapper", branch = "coolercontrol-2-0" }
sha2 = "0.10.8"
toml_edit = "0.22.27"
nix = { version = "0.30.1", default-features = false, features = [
  "user",
  "signal",
  "process",
  "sched",
] }
pciid-parser = "0.8.0"
# 0.8.4 requires Rust > 1.81
libdrm_amdgpu_sys = { version = "=0.8.3", default-features = false, features = [
  "dynamic_loading",
] }
hashlink = "0.10.0"
lazy_format = "2.0.3"
yata = "0.7.0" # moving averages
tiny-skia = "0.11.4" # vector image creation
ril = { version = "0.10.3", default-features = false, features = [
  "png",
  "text",
] } # Text rendering on image
image = { version = "0.25.6", default-features = false, features = [
  "rayon",
  "gif",
  "jpeg",
  "ico",
  "png",
  "tiff",
  "bmp",
  "webp",
] } # image processing
gifski = { version = "1.33.0", default-features = false, features = [
  "gifsicle",
] } # gif processing
imgref = "1.11.0" # for gif processing
rgb = "0.8.50" # for gif processing
uuid = { version = "1.17.0", features = ["v4"] }

[dev-dependencies]
serial_test = "3.2.0"
#rstest = "0.15.0"  # possibility for the future

[profile.release]
strip = "symbols"
opt-level = 3
lto = "fat"
codegen-units = 1

[lints.clippy]
upper_case_acronyms = "allow"
type_complexity = "allow"
too_many_arguments = "allow"
doc_lazy_continuation = "allow"
